{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clusterName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "admin"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2"
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 5
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer"
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter"
    },
    "certificateThumbprint": {
      "type": "string",
      "metadata": {
        "description": "Thumbprint for the Service Fabric cluster management certificate"
      }
    },
    "sourceVaultValue": {
      "type": "string",
      "metadata": {
        "description": "ResourceId of the Key Vault, in the format of /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults/{vaultName}"
      }
    },
    "certificateUrlValue": {
      "type": "string",
      "metadata": {
        "description": "The URL where the cluster management certificate was uploaded, in the format of https://{vaultName}.vault.azure.net:443/secrets/{location}"
      }
    }
  },
  "variables": {
    "namingInfix": "[toLower(substring(concat(parameters('clusterName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "longNamingInfix": "[toLower(parameters('clusterName'))]",
    "vNetName": "[concat(variables('namingInfix'), 'vnet')]",
    "subnetName": "[concat(variables('namingInfix'), 'subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPName": "[concat(variables('namingInfix'), 'ip')]",
    "dnsLabel": "[variables('longNamingInfix')]",
    "lbName": "[concat(variables('namingInfix'), 'lb')]",
    "lbFrontEndName": "frontEndConfig",
    "bePoolName": "[concat(variables('namingInfix'), 'bepool')]",
    "rdpNatPoolName": "[concat(variables('namingInfix'), 'rdpnatpool')]",
    "fabricGatewayProbeName": "fabricGatewayProbe",
    "fabricGatewayPort": 19000,
    "fabricHttpGatewayProbeName": "fabricHttpGatewayProbe",
    "fabricHttpGatewayPort": 19080,
    "nicName": "[concat(variables('namingInfix'), 'nic')]",
    "ipConfigName": "[concat(variables('namingInfix'), 'ipconfig')]",
    "supportLogStorageAccountName": "[toLower(concat('sflogs', uniqueString(resourceGroup().id)))]",
    "applicationDiagnosticsStorageAccountName": "[toLower(concat('applogs', uniqueString(resourceGroup().id)))]"
  },
  "resources": [
    {
      "name": "[variables('vNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "vNet",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "name": "[variables('publicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsLabel')]"
        }
      },
      "tags": {
        "resourceType": "Public IP",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2017-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('lbFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('bePoolName')]"
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('rdpNatPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/', variables('lbFrontEndName'))]"
              },
              "protocol": "tcp",
              "frontendPortRangeStart": 53389,
              "frontendPortRangeEnd": 53644,
              "backendPort": 3389
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('fabricGatewayProbeName')]",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('fabricGatewayPort')]",
              "protocol": "Tcp"
            }
          },
          {
            "name": "[variables('fabricHttpGatewayProbeName')]",
            "properties": {
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "port": "[variables('fabricHttpGatewayPort')]",
              "protocol": "Tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "fabricLBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "frontendPort": "[variables('fabricGatewayPort')]",
              "backendPort": "[variables('fabricGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/', variables('lbFrontEndName'))]"
              },
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('fabricGatewayProbeName'))]"
              },
              "protocol": "Tcp"
            }
          },
          {
            "name": "fabricHttpLBRule",
            "properties": {
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/', variables('bePoolName'))]"
              },
              "frontendPort": "[variables('fabricHttpGatewayPort')]",
              "backendPort": "[variables('fabricHttpGatewayPort')]",
              "enableFloatingIP": false,
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/frontendIPConfigurations/', variables('lbFrontEndName'))]"
              },
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes/', variables('fabricHttpGatewayProbeName'))]"
              },
              "protocol": "Tcp"
            }
          }
        ]
      },
      "tags": {
        "resourceType": "Load Balancer",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('supportLogStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {
        "resourceType": "Storage Account",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2016-01-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('applicationDiagnosticsStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "tags": {
        "resourceType": "Storage Account",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "name": "[variables('namingInfix')]",
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]",
        "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('applicationDiagnosticsStorageAccountName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "caching": "ReadOnly"
            },
            "imageReference": {
              "publisher": "[parameters('imagePublisher')]",
              "offer": "[parameters('imageOffer')]",
              "sku": "[parameters('imageSku')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[variables('namingInfix')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "secrets": [
              {
                "sourceVault": {
                  "id": "[parameters('sourceVaultValue')]"
                },
                "vaultCertificates": [
                  {
                    "certificateStore": "My",
                    "certificateUrl": "[parameters('certificateUrlValue')]"
                  }
                ]
              }
            ]
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('vNetName')), '/subnets/', variables('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools/', variables('bePoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/inboundNatPools/', variables('rdpNatPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "ServiceFabricNode",
                "properties": {
                  "type": "ServiceFabricNode",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2016-01-01').keys[0].value]",
                    "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2016-01-01').keys[1].value]"
                  },
                  "publisher": "Microsoft.Azure.ServiceFabric",
                  "settings": {
                    "clusterEndpoint": "[reference(parameters('clusterName')).clusterEndpoint]",
                    "nodeTypeRef": "nt1",
                    "dataPath": "D:\\\\SvcFab",
                    "durabilityLevel": "Bronze",
                    "enableParallelJobs": true,
                    "nicPrefixOverride": "[variables('subnetPrefix')]",
                    "certificate": {
                      "thumbprint": "[parameters('certificateThumbprint')]",
                      "x509StoreName": "My"
                    }
                  },
                  "typeHandlerVersion": "1.0"
                }
              },
              {
                "name": "[concat('VMDiagnosticsVmExt','_vmNodeType0Name')]",
                "properties": {
                  "type": "IaaSDiagnostics",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                    "storageAccountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')),'2016-01-01').keys[0].value]",
                    "storageAccountEndPoint": "https://core.windows.net/"
                  },
                  "publisher": "Microsoft.Azure.Diagnostics",
                  "settings": {
                    "WadCfg": {
                      "DiagnosticMonitorConfiguration": {
                        "overallQuotaInMB": "50000",
                        "EtwProviders": {
                          "EtwEventSourceProviderConfiguration": [
                            {
                              "provider": "Microsoft-ServiceFabric-Actors",
                              "scheduledTransferKeywordFilter": "1",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableActorEventTable"
                              }
                            },
                            {
                              "provider": "Microsoft-ServiceFabric-Services",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                              }
                            }
                          ],
                          "EtwManifestProviderConfiguration": [
                            {
                              "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                              "scheduledTransferLogLevelFilter": "Information",
                              "scheduledTransferKeywordFilter": "4611686018427387904",
                              "scheduledTransferPeriod": "PT5M",
                              "DefaultEvents": {
                                "eventDestination": "ServiceFabricSystemEventTable"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "StorageAccount": "[variables('applicationDiagnosticsStorageAccountName')]"
                  },
                  "typeHandlerVersion": "1.5"
                }
              }
            ]
          }
        }
      },
      "tags": {
        "resourceType": "VM Scale Set",
        "clusterName": "[parameters('clusterName')]"
      }
    },
    {
      "apiVersion": "2016-09-01",
      "type": "Microsoft.ServiceFabric/clusters",
      "name": "[parameters('clusterName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName'))]"
      ],
      "properties": {
        "certificate": {
          "thumbprint": "[parameters('certificateThumbprint')]",
          "x509StoreName": "My"
        },
        "clusterState": "Default",
        "diagnosticsStorageAccountConfig": {
          "blobEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.blob]",
          "protectedAccountKeyName": "StorageAccountKey1",
          "queueEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.queue]",
          "storageAccountName": "[variables('supportLogStorageAccountName')]",
          "tableEndpoint": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.table]"
        },
        "fabricSettings": [
          {
            "parameters": [
              {
                "name": "ClusterProtectionLevel",
                "value": "EncryptAndSign"
              }
            ],
            "name": "Security"
          }
        ],
        "managementEndpoint": "[concat('https://', reference(variables('publicIPName')).dnsSettings.fqdn, ':', variables('fabricHttpGatewayPort'))]",
        "nodeTypes": [
          {
            "name": "nt1",
            "applicationPorts": {
              "startPort": 20000,
              "endPort": 30000
            },
            "clientConnectionEndpointPort": "[variables('fabricGatewayPort')]",
            "durabilityLevel": "Bronze",
            "ephemeralPorts": {
              "startPort": 49152,
              "endPort": 65534
            },
            "httpGatewayEndpointPort": "[variables('fabricHttpGatewayPort')]",
            "isPrimary": true,
            "vmInstanceCount": "[parameters('instanceCount')]"
          }
        ],
        "provisioningState": "Default",
        "reliabilityLevel": "Silver",
        "upgradeMode": "Automatic",
        "vmImage": "Windows"
      },
      "tags": {
        "resourceType": "Service Fabric",
        "clusterName": "[parameters('clusterName')]"
      }
    }
  ],
  "outputs": {
    "hostName": {
      "type": "string",
      "value": "[reference(variables('publicIPName')).dnsSettings.fqdn]"
    },
    "clusterManagmentEndpoint": {
      "type": "string",
      "value": "[concat('https://', reference(variables('publicIPName')).dnsSettings.fqdn, ':', variables('fabricHttpGatewayPort'))]"
    }
  }
}